<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
/* @var $this Mage_Catalog_Block_Product_List */
?>
<?php
    $_productCollection=$this->getLoadedProductCollection();
    $_helper = $this->helper('catalog/output');

	$currentCategory = Mage::getSingleton('catalog/layer')->getCurrentCategory();

	$strSubTitle = ($currentCategory->getData('product_listing_heading') == '') ? 'Our Styles' : $currentCategory->getData('product_listing_heading');
?>

<?php if(!$_productCollection->count()): ?>
<p class="col-main"><?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: ?>
<div >

    <?php // Grid Mode ?>
    <?php 
        $currentid = $this->getProduct()->getId();
    ?>
    <?php $_collectionSize = $_productCollection->count() ?>
    <?php $_columnCount = 4; ?>
    <ul class="products-grid products-grid--max-<?php echo $_columnCount; ?>-col">
        <?php $i=0; foreach ($_productCollection as $_product): ?>
            <?php /*if ($i++%$_columnCount==0): ?>
            <?php endif*/ ?>
            <?php
            if ($currentid == $_product->getId())                continue;
            $model = Mage::getModel('tag/tag');
            $_tagCollection= $model->getResourceCollection()
                      ->addPopularity()
                      ->addStatusFilter($model->getApprovedStatus())
                      ->addProductFilter($_product->getId())
                      ->setFlag('relation', true)
                      ->addStoreFilter(Mage::app()->getStore()->getId())
                      ->setActiveFilter()
                      ->load();
            
            $_tags=$_tagCollection->getItems();
            $_isNew = false;
            $_isLoved = false;  
            if(count($_tags)):
                foreach($_tags as $tag):
                    switch($tag->getName()){
                        case 'Loved By Many':
                            $_isLoved = true;
                            break;
                        case 'New':
                            $_isNew = true;
                            break;
                    }
                endforeach;
            endif;
            ?>
            <li class="item<?php if(($i-1)%$_columnCount==0): ?> first<?php elseif($i%$_columnCount==0): ?> last<?php endif; ?>">
                <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
                    <?php $_imgSize = 400; ?>
                    <?php
                    if ($_isLoved):
                        echo "<img class='imagetag' src='".$this->getSkinUrl('images/loved-by-many.png')."'/>";
                    elseif ($_isNew):
                            echo "<img class='imagetag' src='".$this->getSkinUrl('images/new.png')."'/>";
                    endif;

                    $strShownIn = $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true);

                    //try{
	                    //$strSmallHoverImage = $this->helper('catalog/image')->init($_product, 'thumbnail')->resize(314,167);
                    //}catch(Exception $e) {
	                    //$strSmallHoverImage = $this->helper('catalog/image')->init($_product, 'small_image')->resize(314,167);
                    //}

                    //->constrainOnly(TRUE)->keepAspectRatio(TRUE)->keepFrame(FALSE)->resize(300,null);

                    ?>
                    <img id="product-collection-image-<?php echo $_product->getId(); ?>" class="mainImage"
                         src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image');//echo $this->helper('catalog/image')->init($_product, 'small_image')->resize($_imgSize); ?>"
                         alt="<?php echo $strShownIn ?>" />

                    <img id="product-collection-image-<?php echo $_product->getId(); ?>-hover" class="rolloverImage"
                         src="<?php echo $this->helper('catalog/image')->init($_product, 'thumbnail');//echo $this->helper('catalog/image')->init($_product, 'small_image')->resize($_imgSize); ?>"
                         alt="<?php echo $strShownIn ?>" />

	                <?php
                        //Need to use small_image_hover for the secound image (only if one has been selected
                        //Disabled for now

                        //->resize(300,192)

                        /**
                         * <img id="product-collection-image-<?php echo $_product->getId(); ?>" class="rolloverImage"
                            src="<?php echo $this->helper('catalog/image')->init($_product, 'thumbnail');//echo $this->helper('catalog/image')->init($_product, 'small_image')->resize($_imgSize); ?>"
                            alt="<?php echo $strShownIn ?>" />
                         */
                    ?>
                </a>
                <div class="product-info">
                    <h2 class="product-name"><a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($_product->getName(), null, true) ?>">
		            <?php
			            echo $_helper->productAttribute($_product, $_product->getName(), 'name');

	                    if($strShownIn != '' && $strShownIn != $this->stripTags($_product->getName(), null, true)){
		                    echo '<br><span class="shownIn">'.$strShownIn.'</span>';
	                    }
                    ?>
	                </a></h2>
	                <?php

                    // Provides extra blocks on which to hang some features for products in the list
                    // Features providing UI elements targeting this block will display directly below the product name
                    if ($this->getChild('name.after')) {
                        $_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
                        foreach ($_nameAfterChildren as $_nameAfterChildName) {
                            $_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
                            $_nameAfterChild->setProduct($_product);
                            echo $_nameAfterChild->toHtml();
                        }
                    }
                    ?>
                    <?php
                        //A bit of a dodgy hack but it works, removes pence and adds "From" into the box
                    //    echo str_replace(array('.00','"price-box">'),array('','"price-box">From '),$this->getPriceHtml($_product, true));
                    ?>
                    <?php if($_product->getRatingSummary()): ?>
                    <?php echo $this->getReviewsSummaryHtml($_product, 'short') ?>
                    <?php endif; ?>
                    <div class="actions">
                        <button type="button" title="View Me" class="button btn-cart" onclick="setLocation('<?php echo $this->getAddToCartUrl($_product) ?>')"><span><span><?php echo $this->__('View me') ?></span></span>
                        </button>
                        
                    </div>
                </div>
            </li>
            <?php /*if ($i%$_columnCount==0 || $i==$_collectionSize): ?>
            <?php endif*/ ?>
        <?php endforeach ?>
	    <!--<li class="item last">
		    <a class="product-image" title="Want to have a look at something else?" href="#">
			    <img alt="Want to have a look at something else?" src="/skin/frontend/bweb/willowhall/images/static/snoop-doggy.jpg" id="product-collection-image-10508">
		    </a>
		    <div class="product-info" style="padding-bottom: 88px; min-height: 167px;">
			    <h2 class="product-name"><a href="#">Want to have a look<br>at something else?</a></h2>
			    <div class="price-box">Back to more items</div>
		    </div>
	    </li>-->
    </ul>
    <script type="text/javascript">decorateGeneric($$('ul.products-grid'), ['odd','even','first','last'])</script>
</div>
<?php endif; ?>
<?php
// Provides a block where additional page components may be attached, primarily good for in-page JavaScript
if ($this->getChild('after')) {
    $_afterChildren = $this->getChild('after')->getSortedChildren();
    foreach ($_afterChildren as $_afterChildName) {
        $_afterChild = $this->getChild('after')->getChild($_afterChildName);
        //set product collection on after blocks
        $_afterChild->setProductCollection($_productCollection);
        echo $_afterChild->toHtml();
    }
}
?>
